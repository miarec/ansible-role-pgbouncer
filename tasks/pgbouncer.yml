---
- name: Add PgBouncer repository apt-key | apt
  apt_key:
    id: "{{ pgbouncer_apt_key_id }}"
    url: "{{ pgbouncer_apt_key_url }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Add PgBouncer repository | apt
  apt_repository:
    repo: "{{ pgbouncer_apt_repository }}"
    state: present
  when: ansible_os_family == "Debian"


- name: Install PgBouncer
  package:
    name: pgbouncer
    state: present

# - name: Create the pgbouncer group
#   group:
#     name: "{{ pgbouncer_group }}"
#     state: present
#     system: true
#   when:
#     - pgbouncer_group != "root"

# - name: Create the pgbouncer user
#   user:
#     name: "{{ pgbouncer_user }}"
#     groups: "{{ pgbouncer_group }}"
#     # append: true
#     # shell: /usr/sbin/nologin
#     # system: true
#     # createhome: false
#     # home: /
#   when:
#     - pgbouncer_user != "root"

- name: Create pgbouncer directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    mode: 0755
  with_items:
    - "{{ pgbouncer_log_dir }}"
    - "{{ pgbouncer_pid_dir }}"


# - name: Create pgbouncer pid directory
#   file:
#     path: "{{ pgbouncer_log_dir }}"
#     state: directory
#     owner: "{{ pgbouncer_user }}"
#     group: "{{ pgbouncer_group }}"
#     mode: 0755

- name: Divert pgbouncer main configuration file {{ pgbouncer_conf_file }}
  command: dpkg-divert --quiet --local --divert {{ pgbouncer_conf_dir }}.dpkg-divert --rename {{ pgbouncer_conf_file }}
  args:
    creates: "{{ pgbouncer_conf_file }}.dpkg-divert"
  when: ansible_os_family == "Debian"

- name: Create pgbouncer configuration file
  template:
    src: pgbouncer.ini.j2
    dest: "{{ pgbouncer_conf_file }}"
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    mode: 0600
  notify:
    - reload pgbouncer

- name: Divert pgbouncer hba file {{ pgbouncer_auth_hba_file }}
  command: dpkg-divert --quiet --local --divert {{ pgbouncer_auth_hba_file }}.dpkg-divert --rename {{ pgbouncer_auth_hba_file }}
  args:
    creates: "{{ pgbouncer_auth_hba_file }}.dpkg-divert"
  when: ansible_os_family == "Debian"

- name: pgbouncer hba file {{ pgbouncer_auth_hba_file }}
  template:
    src: pgbouncer_hba.conf.j2
    dest: "{{ pgbouncer_auth_hba_file }}"
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    mode: 0640
  notify:
    - reload pgbouncer

- name: Divert pgbouncer user list file {{ pgbouncer_conf_dir }}/userlist.txt
  command: dpkg-divert --quiet --local --divert {{ pgbouncer_conf_dir }}/userlist.txt.dpkg-divert --rename {{ pgbouncer_conf_dir }}/userlist.txt
  args:
    creates: "{{ pgbouncer_conf_dir }}/userlist.txt.dpkg-divert"
  when: ansible_os_family == "Debian"

- name: Add users to userlist.txt
  copy:
    dest: "{{ pgbouncer_auth_file }}"
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    mode: 0600
    content: |
      "stats" "passwordless"
      {% for user in pgbouncer_users %}
      "{{ user.name }}" "md5{{ (user.pass + user.name) | hash('md5') }}"
      {% endfor %}
  notify:
    - reload pgbouncer

- name: Ensure pgbouncer service is enabled
  service:
    name: pgbouncer
    enabled: yes

- name: Ensure pgbouncer is running
  service:
    name: pgbouncer
    state: started

- name: Configure logrotate | pgbouncer
  template:
    src: "etc_logrotate.d_pgbouncer.j2"
    dest: "/etc/logrotate.d/pgbouncer"
