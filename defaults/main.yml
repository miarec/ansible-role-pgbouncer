---
pgbouncer_conf_dir: /etc/pgbouncer
pgbouncer_conf_file: "{{ pgbouncer_conf_dir }}/pgbouncer.ini"

pgbouncer_hba_default:
  - comment: unix socket connections
    type: local
    database: all
    user: all
    address: ""
    method: trust
  - comment: trust passwordless local IPv4 connections to the stats table
    type: host
    database: pgbouncer
    user: stats
    address: "127.0.0.1/32"
    method: trust
  - comment: local IPv4 connections
    type: host
    database: all
    user: all
    address: 127.0.0.1/32
    method: md5

pgbouncer_hba_custom: []

pgbouncer_databases:
  - name: "*"
    host: 127.0.0.1
    port: 5432

pgbouncer_users: []

pgbouncer_admin_users:
  - postgres

pgbouncer_stats_users:
  - postgres
  - stats

# APT settings
pgbouncer_apt_key_id: "ACCC4CF8"
pgbouncer_apt_key_url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
pgbouncer_apt_repository: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"


###
### Administrative settings
###

pgbouncer_listen_addr: "*"
pgbouncer_listen_port: 6432

pgbouncer_log_dir: /var/log/pgbouncer
pgbouncer_logfile: "{{ pgbouncer_log_dir }}/pgbouncer.log"
pgbouncer_pid_dir: /var/run/pgbouncer
pgbouncer_pidfile: "{{ pgbouncer_pid_dir }}/pgbouncer.pid"
pgbouncer_unix_socket_dir: /tmp
pgbouncer_unix_socket_mode: 0755
pgbouncer_unix_socket_group: ""

###
### TLS settings for accepting clients
### https://www.pgbouncer.org/config.html#tls-settings
###

pgbouncer_client_tls: false  # If true, pgbouncer will be configured to use TLS to connect to a backend

pgbouncer_client_tls_sslmode: prefer
# TLS mode to use for connections from clients. TLS connections are disabled by default.
# When enabled, client_tls_key_file and client_tls_cert_file must be also configured to set up the key and certificate PgBouncer uses to accept client connections.
# disable - Plain TCP. If client requests TLS, itâ€™s ignored. Default.
# allow - If client requests TLS, it is used. If not, plain TCP is used. If the client presents a client certificate, it is not validated.
# prefer - Same as allow.
# require - Client must use TLS. If not, the client connection is rejected. If the client presents a client certificate, it is not validated.
# verify-ca - Client must use TLS with valid client certificate.
# verify-full - Same as verify-ca


pgbouncer_client_tls_ca_file:            # Root certificate file to validate client certificates.
pgbouncer_client_tls_key_file:           # Certificate for private key. Clients can validate it.
pgbouncer_client_tls_cert_file:          # Private key for PgBouncer to accept client connections.



pgbouncer_client_tls_protocols: secure
# Which TLS protocol versions are allowed.
# Allowed values: tlsv1.0, tlsv1.1, tlsv1.2, tlsv1.3.
# Shortcuts: all (tlsv1.0,tlsv1.1,tlsv1.2,tlsv1.3), secure (tlsv1.2,tlsv1.3), legacy (all).

pgbouncer_client_tls_ciphers: fast        # Allowed TLS ciphers, in OpenSSL syntax. Shortcuts: default/secure, compat/legacy, insecure/all, normal, fast.
pgbouncer_client_tls_dhparams: auto       # DHE key exchange type. Allowed values: none (DH is disabled), auto (2048-bit DH), legacy (1024-bit DH)
pgbouncer_client_tls_ecdhcurve: auto      # Elliptic Curve name to use for ECDH key exchanges. Allowed values: none (DH is disabled), auto (256-bit ECDH), curve name


###
### TLS settings for connecting to backend databases
### https://www.pgbouncer.org/config.html#tls-settings
###

pgbouncer_server_tls: false             # If true, pgbouncer will be configured to use TLS to connect to a backend
pgbouncer_server_tls_sslmode: prefer
# TLS mode to use for connections to PostgreSQL servers. The default mode is prefer.
# disable - Plain TCP. TLS is not even requested from the server.
# allow - FIXME: if server rejects plain, try TLS?
# prefer - TLS connection is always requested first from PostgreSQL. If refused, the connection will be established over plain TCP. Server certificate is not validated. Default
# require - Connection must go over TLS. If server rejects it, plain TCP is not attempted. Server certificate is not validated.
# verify-ca - Connection must go over TLS and server certificate must be valid according to server_tls_ca_file. Server host name is not checked against certificate.
# verify-full - Connection must go over TLS and server certificate must be valid according to server_tls_ca_file. Server host name must match certificate information.

pgbouncer_server_tls_ca_file:          # Root certificate file to validate PostgreSQL server certificates.
pgbouncer_server_tls_key_file:         # Private key for PgBouncer to authenticate against PostgreSQL serve
pgbouncer_server_tls_cert_file:        # Certificate for private key. PostgreSQL server can validate i

pgbouncer_server_tls_ca_file: secure
# Which TLS protocol versions are allowed.
# Allowed values: tlsv1.0, tlsv1.1, tlsv1.2, tlsv1.3.
# Shortcuts: all (tlsv1.0,tlsv1.1,tlsv1.2,tlsv1.3), secure (tlsv1.2,tlsv1.3), legacy (all)

pgbouncer_server_tls_ca_file: fast
# Allowed TLS ciphers, in OpenSSL syntax. Shortcuts: default/secure, compat/legacy, insecure/all, normal, fast.


###
### Authentication settings
###
pgbouncer_auth_type: hba
pgbouncer_auth_file: "{{ pgbouncer_conf_dir }}/userlist.txt"
pgbouncer_auth_hba_file: "{{ pgbouncer_conf_dir }}/pgbouncer_hba.conf"
pgbouncer_auth_query: SELECT usename, passwd FROM pg_shadow WHERE usename=$1

###
### Pooler personality questions
###
pgbouncer_pool_mode: transaction

pgbouncer_server_reset_query: DISCARD ALL
pgbouncer_server_reset_query_always: 0
pgbouncer_ignore_startup_parameters: extra_float_digits,application_name
pgbouncer_server_check_query: select 1
pgbouncer_server_check_delay: 30
pgbouncer_application_name_add_host: 0
pgbouncer_stats_period: 60
pgbouncer_server_fast_close: 0

###
### Connection limits
###
pgbouncer_max_client_conn: 100
pgbouncer_default_pool_size: 20
pgbouncer_min_pool_size: 0
pgbouncer_reserve_pool_size: 0
pgbouncer_reserve_pool_timeout: 5
pgbouncer_max_db_connections: 50
pgbouncer_max_user_connections: 50
pgbouncer_server_round_robin: 0

###
### Logging
###
pgbouncer_syslog: 0
pgbouncer_syslog_facility: daemon
pgbouncer_syslog_ident: pgbouncer
pgbouncer_log_connections: 1
pgbouncer_log_disconnections: 1
pgbouncer_log_pooler_errors: 1
pgbouncer_log_stats: 1
pgbouncer_verbose: 0


###
### Timeouts
###
pgbouncer_server_lifetime: 3600
pgbouncer_server_idle_timeout: 600
pgbouncer_server_connect_timeout: 15
pgbouncer_server_login_retry: 15
pgbouncer_query_timeout: 0
pgbouncer_query_wait_timeout: 120
pgbouncer_client_idle_timeout: 0
pgbouncer_client_login_timeout: 60
pgbouncer_autodb_idle_timeout: 3600
pgbouncer_suspend_timeout: 10
pgbouncer_idle_transaction_timeout: 0

###
### Low-level tuning options
###
pgbouncer_pkt_buf: 4096
pgbouncer_listen_backlog: 128
pgbouncer_sbuf_loopcnt: 5
pgbouncer_max_packet_size: 2147483647
pgbouncer_tcp_defer_accept: 45
pgbouncer_tcp_socket_buffer: 0
pgbouncer_tcp_keepalive: 1
pgbouncer_tcp_keepcnt: 0
pgbouncer_tcp_keepidle: 0
pgbouncer_tcp_keepintvl: 0
pgbouncer_tcp_user_timeout: 0
pgbouncer_dns_max_ttl: 15
pgbouncer_dns_zone_check_period: 0
pgbouncer_dns_nxdomain_ttl: 15

###
### Random stuff
###
pgbouncer_disable_pqexec: 0
